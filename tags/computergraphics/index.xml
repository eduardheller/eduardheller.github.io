<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>computergraphics on eduard heller</title>
    <link>https://eduardheller.github.io/tags/computergraphics/</link>
    <description>Recent content in computergraphics on eduard heller</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://eduardheller.github.io/tags/computergraphics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Replay-System in Unity</title>
      <link>https://eduardheller.github.io/projects/replaysystem/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://eduardheller.github.io/projects/replaysystem/</guid>
      <description>During my master thesis I developed a replay system specialized in a Multi-User VR-Environment. I used an already existing 3D-scenario from my work as a research assistent. The System is non-deterministic, which records the game states in a fixed interval and interpolates between them, other than just recording the inputs and simulating the game. The System also supports two optimization algorithms known from Quake 3 and Braid. The Replay-System features also multiple timelines, so you can record several alternativ scenarios in one file.</description>
    </item>
    
    <item>
      <title>Multi-User Virtual Reality Prototype in Unity</title>
      <link>https://eduardheller.github.io/projects/epicsave/</link>
      <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eduardheller.github.io/projects/epicsave/</guid>
      <description>During my work as a research assistant, we developed a virtual reality framework as a team of six people. My areas of responsibility were the architecture, design and implementation of the virtual reality interactions and network programming of the framework.</description>
    </item>
    
    <item>
      <title>GRACE Visualization Software</title>
      <link>https://eduardheller.github.io/projects/gracevisualization/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://eduardheller.github.io/projects/gracevisualization/</guid>
      <description>This software visualizes the GRACE satellite data to show mass changes on earth. The technologies I used were OpenGL and Vis with Java. It supports animations based on interpolations of the changes. Source code: https://github.com/eduardheller/GRACEVisualization.</description>
    </item>
    
    <item>
      <title>Lindenmayer-Systems</title>
      <link>https://eduardheller.github.io/projects/lindenmayer-systems/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://eduardheller.github.io/projects/lindenmayer-systems/</guid>
      <description>During my bachelor thesis I developed a software to generate and visualize plants with stochastic Lindenmayer Systems. I used OpenGL, C++ and QT for this. It also supports simple sinus wave animation of plants and shadow mapping. Source code: https://github.com/eduardheller/Lindenmayer-System</description>
    </item>
    
    <item>
      <title>Battle of the Throne</title>
      <link>https://eduardheller.github.io/projects/battle-of-the-throne/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://eduardheller.github.io/projects/battle-of-the-throne/</guid>
      <description>Battle of the Thrones is a 3D towerdefense game made in C# and OpenGL. I wrote my own engine and shaders to acomplish this. It supports:
 shadow mapping/cascade shadow mapping view frustum culling water refraction/reflection stack based GUI instance based particles distance field text rendering &amp;hellip;  
Source code: https://github.com/eduardheller/towerdefense/tree/master/TowerDefense</description>
    </item>
    
    <item>
      <title>Image Processing Software</title>
      <link>https://eduardheller.github.io/projects/imageprocessor/</link>
      <pubDate>Fri, 08 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://eduardheller.github.io/projects/imageprocessor/</guid>
      <description>This software produces several image effects and process various known algorithms, such as canny-edge or hough-transformations, on an image. Source code: https://github.com/eduardheller/ImageProcessor</description>
    </item>
    
  </channel>
</rss>
